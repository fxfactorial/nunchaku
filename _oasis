OASISFormat: 0.4
Name:        nunchaku
Version:     0.1
Homepage:    https://github.com/nunchaku/nunchaku
Authors:     Simon Cruanes, Jasmin Blanchette
License:     BSD-2-clause
LicenseFile: LICENSE
Plugins:     META (0.3), DevFiles (0.3)
OCamlVersion: >= 4.01
BuildType:   OMake (0.4)
FilesAB:     src/main/const.ml.ab
AlphaFeatures: compiled_setup_ml

Synopsis:    A model finder for higher-order logic

XOMakeExtraArgs: "-c 'OCAMLYACC = menhir --dump --explain'"

Flag random
  Description:      enable the library for generating random data
  Default:          true

Library nunchaku
  Path:             src/core/
  Pack:             true
  Modules:          ID, Var, MetaVar, Location, Intf, Utils, Transform,
                    UntypedAST, Model, TypeUnify, Problem, FO, Reduce,
                    Env, Signature, Statement, FO_tptp, FO_rel, Cardinality,
                    Scheduling, Polarity, Traversal, ProblemMetadata,
                    AnalyzeType, Prelude, TypeCheck, Lazy_list,
                    TermInner, TermTyped, TermPoly, TermMono, Pattern,
                    TypePoly, TypeMono
  Install:          true
  FindlibName:      nunchaku
  BuildDepends:     containers, containers.data, containers.sexp, sequence,
                    num, unix, threads

Library nunchaku_parsers
  Path:             src/parsers/
  Pack:             true
  Modules:          Parsing_utils, Lexer, Parser, TPTP_print,
                    TPTP_lexer, TPTP_parser, TPTP_preprocess,
                    TPTP_model_ast, TPTP_model_lexer, TPTP_model_parser,
                    Ast_kodkod, Lex_kodkod, Parse_kodkod, Parse_tip
  Install:          true
  FindlibName:      parsers
  FindlibParent:    nunchaku
  BuildTools:       menhir
  BuildDepends:     nunchaku, tip_parser

Library nunchaku_backends
  Path:             src/backends
  Pack:             true
  Modules:          CVC4, Kodkod, Paradox
  Install:          true
  FindlibName:      backends
  FindlibParent:    nunchaku
  BuildDepends:     nunchaku, nunchaku.parsers, containers.sexp

Library nunchaku_transformations
  Path:             src/transformations
  Pack:             true
  Modules:          Skolem,
                    TypeInference,
                    ElimPatternMatch,
                    Monomorphization,
                    Specialize,
                    LambdaLift,
                    Elim_HOF,
                    ElimRecursion,
                    ElimMultipleEqns,
                    ElimIndPreds,
                    ElimCopy,
                    Polarize,
                    Unroll,
                    IntroGuards,
                    Model_clean,
                    ElimData,
                    ElimTypes,
                    Elim_prop_args,
                    Elim_ite,
                    Elim_infinite,
                    FoToRelational
  Install:          true
  FindlibName:      transformations
  FindlibParent:    nunchaku
  BuildDepends:     containers, nunchaku

Library nunchaku_random
  Path:             src/random
  Pack:             true
  Modules:          Term_random
  Install$:         flag(random)
  Build$:           flag(random)
  FindlibParent:    nunchaku
  FindlibName:      random
  BuildDepends:     nunchaku, qcheck

Executable nunchaku
  Path:             src/main/
  Install:          true
  CompiledObject:   native
  MainIs:           nunchaku.ml
  BuildDepends:     nunchaku, nunchaku.transformations, nunchaku.parsers,
                    nunchaku.backends

PreBuildCommand:    make qtest-gen

Executable run_qtest
  Path:             qtest/
  Install:          false
  CompiledObject:   native
  MainIs:           run_qtest.ml
  Build$:           flag(tests)
  BuildDepends:     nunchaku, nunchaku.parsers, nunchaku.transformations,
                    nunchaku.random, oUnit, qcheck

Test all
  Command:      ./run_qtest.native
  TestTools:    run_qtest
  Run$:         flag(tests)

Document nunchaku
  Title:                Documentation of Nunchaku
  Type:                 omake (0.4)
  BuildTools+:          ocamldoc
  Build$:               flag(docs)
  Install:              true
  XOMakePath:           .
  XOMakeFlags:          -colorize-code -short-functors -charset utf-8'
  XOMakeLibraries:
    nunchaku, nunchaku.parsers, nunchaku.transformations

